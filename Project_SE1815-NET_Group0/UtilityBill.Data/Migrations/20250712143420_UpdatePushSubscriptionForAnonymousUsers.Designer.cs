// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UtilityBill.Data.Context;

#nullable disable

namespace UtilityBill.Data.Migrations
{
    [DbContext(typeof(UtilityBillDbContext))]
    [Migration("20250712143420_UpdatePushSubscriptionForAnonymousUsers")]
    partial class UpdatePushSubscriptionForAnonymousUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__UserRole__AF2760AD2D95938C");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoicePeriodMonth")
                        .HasColumnType("int");

                    b.Property<int>("InvoicePeriodYear")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Invoices__3214EC0799069A92");

                    b.HasIndex(new[] { "RoomId", "InvoicePeriodYear", "InvoicePeriodMonth" }, "IX_Invoices_RoomPeriod");

                    b.HasIndex(new[] { "Status" }, "IX_Invoices_Status");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.InvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__InvoiceD__3214EC079E6FC9B2");

                    b.HasIndex(new[] { "InvoiceId" }, "IX_InvoiceDetails_InvoiceId");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.MaintenanceSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Block")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduledStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Maintena__3214EC07CE17A211");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("RoomId");

                    b.ToTable("MaintenanceSchedules");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.MeterReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ElectricReading")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReadingMonth")
                        .HasColumnType("int");

                    b.Property<int>("ReadingYear")
                        .HasColumnType("int");

                    b.Property<string>("RecordedByUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<decimal>("WaterReading")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__MeterRea__3214EC07CCF74BA8");

                    b.HasIndex("RecordedByUserId");

                    b.HasIndex(new[] { "RoomId", "ReadingYear", "ReadingMonth" }, "IX_MeterReadings_RoomMonthYear");

                    b.HasIndex(new[] { "RoomId", "ReadingMonth", "ReadingYear" }, "UQ__MeterRea__247DDF995FA867EA")
                        .IsUnique();

                    b.ToTable("MeterReadings");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("RelatedEntityId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("SentAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC07F4E936F9");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Payments__3214EC0776E8803B");

                    b.HasIndex(new[] { "InvoiceId" }, "IX_Payments_InvoiceId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.PushSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Auth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("P256Dh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__PushSubs__3214EC07A1B2C3D4");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Endpoint" }, "IX_PushSubscriptions_Endpoint")
                        .IsUnique();

                    b.ToTable("PushSubscriptions");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC07ACBD1954");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Block")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Floor")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("QRCodeData")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("QRCodeData");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Rooms__3214EC076D36A9C6");

                    b.HasIndex(new[] { "Status" }, "IX_Rooms_Status");

                    b.HasIndex(new[] { "RoomNumber" }, "UQ__Rooms__AE10E07A2A9FB89F")
                        .IsUnique();

                    b.HasIndex(new[] { "QRCodeData" }, "UQ__Rooms__E8D1C96FD9285C5E")
                        .IsUnique()
                        .HasFilter("[QRCodeData] IS NOT NULL");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.TenantHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("MoveInDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("MoveOutDate")
                        .HasColumnType("date");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__TenantHi__3214EC071C5E23E0");

                    b.HasIndex(new[] { "RoomId" }, "IX_TenantHistories_RoomId");

                    b.HasIndex(new[] { "TenantId" }, "IX_TenantHistories_TenantId");

                    b.ToTable("TenantHistories");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07C0A05EA1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("UtilityBill.Data.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__RoleI__3E52440B");

                    b.HasOne("UtilityBill.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__UserI__3D5E1FD2");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Invoice", b =>
                {
                    b.HasOne("UtilityBill.Data.Models.Room", "Room")
                        .WithMany("Invoices")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoices__RoomId__5070F446");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.InvoiceDetail", b =>
                {
                    b.HasOne("UtilityBill.Data.Models.Invoice", "Invoice")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__InvoiceDe__Invoi__534D60F1");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.MaintenanceSchedule", b =>
                {
                    b.HasOne("UtilityBill.Data.Models.User", "CreatedByUser")
                        .WithMany("MaintenanceSchedules")
                        .HasForeignKey("CreatedByUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Maintenan__Creat__5BE2A6F2");

                    b.HasOne("UtilityBill.Data.Models.Room", "Room")
                        .WithMany("MaintenanceSchedules")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK__Maintenan__RoomI__5AEE82B9");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.MeterReading", b =>
                {
                    b.HasOne("UtilityBill.Data.Models.User", "RecordedByUser")
                        .WithMany("MeterReadings")
                        .HasForeignKey("RecordedByUserId")
                        .HasConstraintName("FK__MeterRead__Recor__4BAC3F29");

                    b.HasOne("UtilityBill.Data.Models.Room", "Room")
                        .WithMany("MeterReadings")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__MeterRead__RoomI__4AB81AF0");

                    b.Navigation("RecordedByUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Notification", b =>
                {
                    b.HasOne("UtilityBill.Data.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__UserI__60A75C0F");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Payment", b =>
                {
                    b.HasOne("UtilityBill.Data.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Invoic__571DF1D5");

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.PushSubscription", b =>
                {
                    b.HasOne("UtilityBill.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__PushSubsc__UserI__70A75C0F");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.TenantHistory", b =>
                {
                    b.HasOne("UtilityBill.Data.Models.Room", "Room")
                        .WithMany("TenantHistories")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK__TenantHis__RoomI__45F365D3");

                    b.HasOne("UtilityBill.Data.Models.User", "Tenant")
                        .WithMany("TenantHistories")
                        .HasForeignKey("TenantId")
                        .IsRequired()
                        .HasConstraintName("FK__TenantHis__Tenan__46E78A0C");

                    b.Navigation("Room");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.Room", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("MaintenanceSchedules");

                    b.Navigation("MeterReadings");

                    b.Navigation("TenantHistories");
                });

            modelBuilder.Entity("UtilityBill.Data.Models.User", b =>
                {
                    b.Navigation("MaintenanceSchedules");

                    b.Navigation("MeterReadings");

                    b.Navigation("Notifications");

                    b.Navigation("TenantHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
